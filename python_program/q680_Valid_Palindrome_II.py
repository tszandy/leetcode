from typing import List
from collections import Counter,defaultdict
from math import *
from functools import reduce

class Solution:
    def validPalindrome(self, s: str) -> bool:
        
        s_list = list(s)
        for i in range(len(s)//2):
            if s[i]!=s[-(i+1)]:
                if s[i+1]==s[-i-1] and s[i]==s[-i-2]:
                    l1 = s_list[:]
                    l1.pop(i)
                    l2 = s_list[:]
                    l2.pop(-(i+1))                    
                    return self.is_palindrome(l1) or self.is_palindrome(l2)
                elif s[i+1]==s[-i-1]:
                    l1 = s_list[:]
                    l1.pop(i)
                    return self.is_palindrome(l1)
                elif s[i]==s[-i-2]:
                    l2 = s_list[:]
                    l2.pop(-(i+1))                    
                    return self.is_palindrome(l2)
                else:
                    return False
        return self.is_palindrome(s_list)
            
    def is_palindrome(self, s:List[str]) -> bool:
    	reverse_list = s[::-1]
    	for i,j in zip(s,reverse_list):
    		if i!=j:
    			return False
    	return True


sol = Solution()

s = "aba"
print(sol.validPalindrome(s))

s = "abca"
print(sol.validPalindrome(s))

s = "abc"
print(sol.validPalindrome(s))

s = "eccer"
print(sol.validPalindrome(s))

s = "aguokepatgbnvfqmgmlcupuufxoohdfpgjdmysgvhmvffcnqxjjxqncffvmhvgsymdjgpfdhooxfuupuculmgmqfvnbgtapekouga"
print(sol.validPalindrome(s))

s = "ytctspxklcdlrstppiduaymioxoskuuslasaqqryubfbjeezehbvbyoghduofbatxeakqytjroigqcxtxchdwqoxscdhiutkhmgzxiitloijoqabynirbmjigcdjsdiyfyfycuqotsiprpxswkqazpqayrpepwkuyhmxvkcipxmbseemznsxesjcedotluvlvovlojkcmgiaqncuzsfacsxfizkufufyapqbzpjzdyvrylplcyuizzjryfupmuxdaueonxxgnlywpigjgwkiaykqmztwksrcapkiftugcjvlalotpkzfopginyoqqprzzhqoznwvoisrzeqxxjousxdwypcyvyznlboivwzmobkhjccmcfapyrvnmuwbcevpwpsvqvjeocnnuhjywxhidmvanmogmchreiebvaktvqgyccvifxcbaojddfsulfkgcdhaebeadxtogcdafpzcgfhosnldkrzqpgqegmqaymzvpletyexqvenhwecisbgoihhyjklqllfirjpietgmglumbxgwssxvmottxjltfvjlsphguvtsszeqksqsgmwskxjlfkffjzeliqqltdabmtrpcolldrirwfljxgcjbekujkpwssnnoegzupjwxoozgllwgtlspkytwatqnkutyifjeydfhikvewicyyhorqiczvmadwdbsogxbnrqmxkwcuqjvwbjfnnpyplojmlwslugdlqxvonyrutslvcowbthuhefjecfhcreqoknohfvrxlitfgmptuixkokteuwvubkgnxwtijkxqkuzzgdwannybhlvkjqyysqplrmgkhvqpakvfahadzfplxkntukjrojwebmdvzcxpopefscqxqunmxojomefcbbytktjdrwhozzvgvletmnwtqblpvgdxegexzdixvawjztnsqxkrxqpoqcynssfgdhehswpvkvhsqdnizxrghluqtlpttppnkhufpzzsnaxdvgpkjipzmprkfekhwelcxcdpetqegktjpuwznihiejtouvwkhsjubkthrlcmaxouyzwhfdvzwqpvhytbnglqglxygmqttmslkyoorrhmdoayxngwwcxuuknfncvmcrjidddxkddulrdyanfynqloovuancbpbypjsbgsddoodrfamxtzrkkjlfketjycxmqlygxwskfhzpqhtllgyfnihannitzlhbkydfglswwgnyrgtlugmfiyyygmdjwhwtvwbbnsjmuqlnlzetzjglowwptzybxnuhdeizvmgmuvhxrpcktxapbceusmlocysjqvnyauseletcwvkaljyyufslrfnditsznlrjhdfaprwrxaercxozvypotbehxzhowyvdlxhjykohlwjgxnzatwixsrccrpbywwqzxcnprjynoyacxglerdfvtdenrtrloztzywhslgxfltauejrcsyvhbrdivwqpuesxgpdiyrazmfnoqevfwabzwmepvrzaduizmoukvgzptykojxyhatxprbrlvceasbnnrururbwjzwofnacgsnbbvwwqvjmjwswkanjiojbnzvomborindkcrzjmumobdineuixqobylavfqdyiefwufvgfnfmcavoljtodjoziitgstrouxlzxktwznmzufoyaduzstsrbctvucmtrawlkkmavtfjauvbpcycgdmgvykzgzqyfxofrrdtkubdfcoebfmlwhpefyzcmmsdqubhqynywgnnkxrryldooxxqbtcebwbnuduqdmrtkyuufcdumkldgwmsvsezpluzszuijyvjheghpkcgiuwmwdfdvhyulwfxgxmromehdnihkmubvvrhmzuwrninimwkemdqzxwhdmhvdmqvdcrdspybdhmnascwqizhyihxohqmpzkvsisdjapnfdqqplryealwdllkyjbtazbwtgirvgkzmupcvypvdozkxqrmanrvxobiofrizojptfblpttxihdwjjnhqbiikwacazfzaoabhixernyhnbrupazsjivnqewzhjxptvlsjbsgqammuzolfqfbommhdlyzuipohwdesfmdvmyrkjnoxnauvslhlqmijgdatsgytnbdojyapmvcvihzziuofcctamthqcnzdwvlhymmzwetnruxycbyqbmltnhirlzjqmqhwiiwwevcmbehjsbagledjhceqhkkolclokvwhhhahrnxrlxmkobsywphvnlhozbuakujazbndwomlmqlwasjvqlvzpxaxzmwsgctyujtphozhyxquwojrofpgmmobczjtsqqomkeybnjrvwaosvrcsmxmaptyqpebigmlkswrotfaorwtudsluawnwdbcdvrjuoiplrxlgiruzfgaupyhbonojxbdwixplndgbnaxmwrukwxbparalhaioumowsowgzlxnmzzlcooiwrppkvipynpnewwnmsubtovhjpsijvnkfbpyedixloewifxgrcifbwokhnzggsusjnomwvfaoipyuktgfqvdaduecigzvdqfwynestgjopdpgzarnekfcwrdhqshqwoizxqmibyyffrmnsbybbkvnoyeovbxvtjetykoekhnfrhyurzaqbunyksypmfulczcymhxkhewdhnlocfvsyjbwckoqbkvzrdazaibbjxthcdwvntbpwgwcraebhpklijukqofguestkxfifagvetjsiqagzessazbxxucaiautqgndnquplhvxuohtyfpmakbqrkglyjvsifucmkhonepxpuewwvbhmdwvqfgqusvvhkyayzcacguqkhzsiinsfzkoraijnenchmgpqdiifgehtyossdvlwxbfcevsyncciwiwujoiixmggwoejijqnsygkjczzvdepzygprsqihrqkbyydeoykggvxyfbpcnuypcvbsjewgcxuqjrzmmqlaroqemtiunhqxnwoauuburbvhpdxbleadabntoftxsbsxivefjkutygcfifusamkmoilqvvhlaflrqtxdqapsrtspikbkhljiwnbhxdsxgsveoznulxtupenfgxjfqqlzzdtzdxvuaemjckzkocdmyalmywdrswveewjpdfgoyvzxuqgkyuowlabhjlznivqjccsskfzzeezbdnwsjtztzpmqsalwrxtuumkgnalhanwwwfwoyoklwtzmlvrlolkiusczhgnnubepacjzotxvqoudxjqonitafxemkijptfsnqogkasuzjtjzowbmtfnkmmmoohbdotlhglsjhqciknibhjvditbtjprrmcgdxcoxzbncufxsklbsxigsrjqiiquknpeutuqpvakwdhhmtxmqlwmxjxvyvvuqwvpgcgnlzgrtnrnyuatgiafgrebdnzhrarfstxjfrybojowvduyiwvxrkohuqodbhnflbnlqheczrpmwrukxvcifskxkrlejwpcyfreoytdjrtxgezcwndzhzuvjzphwrljwdrxthztbinsyktvekrhrbhrhegbiyukbfqxmcjfiyzulpdmogutcmhjozlkaunlvmdjewnekvrauxcgjyvafilnrubirppbpmztfqayojefjxksydqklgoiqctmtxunrzvrrmwtjsikmrqkqpnnrshodpnsyqoaifkdadtgjoswswfgjepxqsyvcwxdgzkhkupnsnnzvimadmpkmxuovuymanllvtdwffhsunnxzjtgahpctquhxbiapptyruqbnectyxdfaxqprqenxzgjikzermuzsdcybamamcxatezqxteinvtcthdxtbbimuqwxbfuvcaucfkrqlitgwldzubbysvqpxjgyzgaezxdxsiojomzjcmjzskjtdmeoiallswqjurxeojmkujvlrcipobkducxstaaunbuquxckuzxupxlltoecpfpztlmzrsotxysivvrrbrhadkvntrxivpflsjpzmsoxmtjgoiylnvzmicdidhsscrjyxxclmqjcpdyvmcpqzkjrlqkytzdadznhtmueojeteimrknbujiqfqxibiatipvyubxkzykpwseihqdnjhenvhsxcquswbtdrtyblsotdjvgcgcqadegkzwrdjwazaqutssfrnhrizaomljhgyvmiceminobrwlqaeflzeroycgwqouxuigdsfpimhsnwdwzueythjykiilrjpdvdegwyuvnutqxxhckycuoljacxjfwoyceflrwtdcvqfbzddyrchbjoywomlhmamttzhtgdarrleruqcwzjkjtkscuhxdopoetcsjplvpduezwnvywwzydkwyavvlflrbzwmxiqeypyquvaykvzbvblciubuaxihgrerevjwnxlemcbbsqtzvaualobrchizvlcigjlmoucciyrwtylypsxwzqtdwslnnkxbluvfddqotaazzjvviemibdltothyofnudxvbrrjzqtbicujpwqljprzczmiblswgwjkqprscznufthonzqznuztnxfeayyoajckgbgcafvmbbjmxcgdkxuhmdnoeaelompffqtmmocqnkwqvxetyljjsqhmskmfkcpnkapfnbkfbbtsujpqvfsecfmbufmldsssgvlvgketfedowtmpwgysyieiqezshqhtugwevypemlueyowcdtsfskhcedhkuchjmkvvfxbrpuxturtjvjqhqqakvebqusseyrafxblcjvxcbgffxhfevbzfzkjvjeerkhqsqkyauarldqejdopubhhagiftgruvbcfynnmpamviaesdvgykpphtlnbziknmdvkeedniqdkpesnncgfntkdbobjriioodiosxjwrlmlkdoubkjcfnryawgbeqyahovzumxuyrvqualvzptqtmfmmaqugblrqrhrxsvtqysggakdktausazbfsjwmcdyicxqwksthjslvvgxwpbrkjbfqxbbxqfbjkrbpwxgvvlsjhtskwqxciydcmwjsfbzasuatkdkaggsyqtvsxrhrqrlbguqammfmtqtpzvlauqvryuxmuzvohayqebgwayrnfcjkbuodklmlrwjxsoidooiirjbobdktnfgcnnsepkdqindeekvdmnkizbnlthppkygvdseaivmapmnnyfcbvurgtfigahhbupodjeqdlrauaykqsqhkreejvjkzfzbvefhxffgbcxvjclbxfaryessuqbevkaqqhqjvjtrutxuprbxfvvkmjhcukhdechksfstdcwoyeulmepyvewguthqhszeqieiysygwpmtwodeftekgvlvgsssdlmfubmfcesfvqpjustbbfkbnfpaknpckfmksmhqsjjlytexvqwknqcommtqffpmoleaeondmhuxkdgcxmjbbmvfacgbgkcjaoyyaefxntzunzqznohtfunzcsrpqkjwgwslbimzczrpjlqwpjucibtqzjrrbvxdunfoyhtotldbimeivvjzzaatoqddfvulbxknnlswdtqzwxspylytwryiccuomljgiclvzihcrbolauavztqsbbcmelxnwjvererghixaubuiclbvbzvkyavuqypyeqixmwzbrlflvvaywkdyzwwyvnwzeudpvlpjscteopodxhucsktjkjzwcqurelrradgthzttmamhlmowyojbhcryddzbfqvcdtwrlfecyowfjxcajloucykchxxqtunvuywgedvdpjrliikyjhtyeuzwdwnshmipfsdgiuxuoqwgcyorezlfeaqlwrbonimecimvyghjlmoazirhnrfsstuqazawjdrwzkgedaqcgcgvjdtoslbytrdtbwsuqcxshvnehjndqhieswpkyzkxbuyvpitaibixqfqijubnkrmietejoeumthnzdadztykqlrjkzqpcmvydpcjqmlcxxyjrcsshdidcimzvnlyiogjtmxosmzpjslfpvixrtnvkdahrbrrvvisyxtosrzmltzpfpceotllxpuxzukcxuqubnuaatsxcudkbopicrlvjukmjoexrujqwsllaioemdtjkszjmcjzmojoisxdxzeagzygjxpqvsybbuzdlwgtilqrkfcuacvufbxwqumibbtxdhtctvnietxqzetaxcmamabycdszumrezkijgzxneqrpqxafdxytcenbqurytppaibxhuqtcphagtjzxnnushffwdtvllnamyuvouxmkpmdamivznnsnpukhkzgdxwcvysqxpejgfwswsojgtdadkfiaoqysnpdohsrnnpqkqrmkisjtwmrrvzrnuxtmtcqioglkqdyskxjfejoyaqftzmpbppriburnlifavyjgcxuarvkenwejdmvlnuaklzojhmctugomdpluzyifjcmxqfbkuyibgehrhbrhrkevtkysnibtzhtxrdwjlrwhpzjvuzhzdnwczegxtrjdtyoerfycpwjelrkxksficvxkurwmprzcehqlnblfnhbdoquhokrxvwiyudvwojobyrfjxtsfrarhzndbergfaigtauynrntrgzlngcgpvwquvvyvxjxmwlqmxtmhhdwkavpqutuepnkuqiiqjrsgixsblksxfucnbzxocxdgcmrrpjtbtidvjhbinkicqhjslghltodbhoommmknftmbwozjtjzusakgoqnsftpjikmexfatinoqjxduoqvxtozjcapebunnghzcsuiklolrvlmztwlkoyowfwwwnahlangkmuutxrwlasqmpztztjswndbzeezzfkssccjqvinzljhbalwouykgquxzvyogfdpjweevwsrdwymlaymdcokzkcjmeauvxdztdzzlqqfjxgfneputxlunzoevsgxsdxhbnwijlhkbkipstrspaqdxtqrlfalhvvqliomkmasufifcgytukjfevixsbsxtfotnbadaelbxdphvbrubuuaownxqhnuitmeqoralqmmzrjquxcgwejsbvcpyuncpbfyxvggkyoedyybkqrhiqsrpgyzpedvzzcjkgysnqjijeowggmxiiojuwiwiccnysvecfbxwlvdssoythegfiidqpgmhcnenjiarokzfsniiszhkqugcaczyaykhvvsuqgfqvwdmhbvwweupxpenohkmcufisvjylgkrqbkampfythouxvhlpuqndngqtuaiacuxxbzassezgaqisjtevgafifxktseugfoqkujilkphbearcwgwpbtnvwdchtxjbbiazadrzvkbqokcwbjysvfcolnhdwehkxhmyczclufmpyskynubqazruyhrfnhkeokytejtvxbvoeyonvkbbybsnmrffyybimqxziowqhsqhdrwcfkenrazgpdpojgtsenywfqdvzgiceudadvqfgtkuypioafvwmonjsusggznhkowbficrgxfiweolxideypbfknvjispjhvotbusmnwwenpnypivkpprwiooclzzmnxlzgwoswomuoiahlarapbxwkurwmxanbgdnlpxiwdbxjonobhypuagfzuriglxrlpioujrvdcbdwnwaulsdutwroaftorwsklmgibepqytpamxmscrvsoawvrjnbyekmoqqstjzcbommgpforjowuqxyhzohptjuytcgswmzxaxpzvlqvjsawlqmlmowdnbzajukaubzohlnvhpwysbokmxlrxnrhahhhwvkolclokkhqechjdelgabsjhebmcvewwiiwhqmqjzlrihntlmbqybcyxurntewzmmyhlvwdzncqhtmatccfouizzhivcvmpayjodbntygstadgjimqlhlsvuanxonjkrymvdmfsedwhopiuzyldhmmobfqflozummaqgsbjslvtpxjhzweqnvijszapurbnhynrexihbaoazfzacawkiibqhnjjwdhixttplbftpjozirfoiboxvrnamrqxkzodvpyvcpumzkgvrigtwbzatbjyklldwlaeyrlpqqdfnpajdsisvkzpmqhoxhiyhziqwcsanmhdbypsdrcdvqmdvhmdhwxzqdmekwmininrwuzmhrvvbumkhindhemormxgxfwluyhvdfdwmwuigckphgehjvyjiuzszulpzesvsmwgdlkmudcfuuyktrmdqudunbwbectbqxxoodlyrrxknngwynyqhbuqdsmmczyfephwlmfbeocfdbuktdrrfoxfyqzgzkyvgmdgcycpbvuajftvamkklwartmcuvtcbrstszudayofuzmnzwtkxzlxuortsgtiizojdotjlovacmfnfgvfuwfeiydqfvalyboqxiuenidbomumjzrckdnirobmovznbjoijnakwswjmjvqwwvbbnsgcanfowzjwbrururnnbsaecvlrbrpxtahyxjokytpzgvkuomziudazrvpemwzbawfveqonfmzaryidpgxseupqwvidrbhvyscrjeuatlfxglshwyztzolrtrnedtvfdrelgxcayonyjrpncxzqwwybprccrsxiwtaznxgjwlhokyjhxldvywohzxhebtopyvzoxcreaxrwrpafdhjrlnzstidnfrlsfuyyjlakvwctelesuaynvqjsycolmsuecbpaxtkcprxhvumgmvziedhunxbyztpwwolgjztezlnlqumjsnbbwvtwhwjdmgyyyifmgultgryngwwslgfdykbhlztinnahinfygllthqpzhfkswxgylqmxcyjtekfljkkrztxmafrdooddsgbsjpybpbcnauvoolqnyfnaydrluddkxdddijrcmvcnfnkuuxcwwgnxyaodmhrrooyklsmttqmgyxlgqlgnbtyhvpqwzvdfhwzyuoxamclrhtkbujshkwvuotjeihinzwupjtkgeqtepdcxclewhkefkrpmzpijkpgvdxanszzpfuhknppttpltqulhgrxzindqshvkvpwshehdgfssnycqopqxrkxqsntzjwavxidzxegexdgvplbqtwnmtelvgvzzohwrdjtktybbcfemojoxmnuqxqcsfepopxczvdmbewjorjkutnkxlpfzdahafvkapqvhkgmrlpqsyyqjkvlhbynnawdgzzukqxkjitwxngkbuvwuetkokxiutpmgftilxrvfhonkoqerchfcejfehuhtbwocvlsturynovxqldgulswlmjolpypnnfjbwvjqucwkxmqrnbxgosbdwdamvzciqrohyyciwevkihfdyejfiytuknqtawtykpsltgwllgzooxwjpuzgeonnsswpkjukebjcgxjlfwrirdllocprtmbadtlqqilezjffkfljxkswmgsqskqezsstvughpsljvftljxttomvxsswgxbmulgmgteipjrifllqlkjyhhiogbsicewhnevqxeytelpvzmyaqmgeqgpqzrkdlnsohfgczpfadcgotxdaebeahdcgkflusfddjoabcxfivccygqvtkavbeierhcmgomnavmdihxwyjhunncoejvqvspwpvecbwumnvrypafcmccjhkbomzwvioblnzyvycpywdxsuojxxqezrsiovwnzoqhzzrpqqoynigpofzkptolalvjcgutfikpacrskwtzmqkyaikwgjgipwylngxxnoeuadxumpufyrjzziuyclplyrvydzjpzbqpayfufukzifxscafszucnqaigmckjolvovlvultodecjsexsnzmeesbmxpickvxmhyukwpepryaqpzaqkwsxprpistoqucyfyfyidsjdcgijmbrinybaqojioltiixzgmhktuihdcsxoqwdhcxtxcqgiorjtyqkaextabfoudhgoybvbhezeejbfbuyrqqasalsuuksoxoimyaudipptsrldclkxpstct"
print(sol.validPalindrome(s))
